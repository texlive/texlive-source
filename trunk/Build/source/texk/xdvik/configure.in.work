
dnl ##########

dnl First, check for libXp and libXext:
if test -z "$x_ext_lib"; then # allow envvar override
  if test -n "$x_libraries"; then
    XLFLAG="-L$x_libraries"
  else
    XLFLAG=
  fi
  AC_CHECK_LIB(Xp, XpQueryVersion,
               x_ext_lib="-lXp -lXext", :, -lXext -lX11 $X_EXTRA_LIBS $XLFLAG)
fi
dnl
dnl If libXp not found, try libXext only:
dnl
if test -z "$x_ext_lib"; then # previous test unsuccessful, or envvar override
  if test -n "$x_libraries"; then
    XLFLAG="-L$x_libraries"
  else
    XLFLAG=
  fi
  AC_CHECK_LIB(Xext, XextCreateExtension,
               x_ext_lib=-lXext, :, -lX11 $X_EXTRA_LIBS $XLFLAG)
fi
AC_SUBST(x_ext_lib)

dnl ##########

dnl We try to perform the $program_transform_name replacement already
dnl here, and AC_SUBST the final names into the Makefile; this makes
dnl the compilation commands more readable and causes less problems with
dnl backtick magic inside other commands.
dnl
dnl For some reason, the doubling of $$ and \\ must be reverted here:
my_program_transform_name=`echo $program_transform_name | sed 's,\\$\\$,$,g' | sed 's,\\\\\\\\,\\\\,g'`
exec_name="xdvi-$prog_extension"
final_exec_name=`echo $exec_name | sed "$my_program_transform_name"`
dnl OBSOLETE?? exec_link=`echo xdvi.bin | sed "$my_program_transform_name"`		
wrapper_script=`echo xdvi | sed "$my_program_transform_name"`		
AC_SUBST(exec_name)
AC_SUBST(final_exec_name)
dnl OBSOLETE?? AC_SUBST(exec_link)
AC_SUBST(wrapper_script)

dnl ##########

