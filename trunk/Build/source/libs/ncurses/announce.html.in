<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.0//EN">
<!--
  $Id: announce.html.in,v 1.53 2004/01/18 01:27:26 tom Exp $
-->
<HTML>
<HEAD>
<TITLE>Announcing ncurses @VERSION@</TITLE>
<link rev=made href="mailto:bug-ncurses@gnu.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</HEAD>
<BODY>

<H1>Announcing ncurses @VERSION@</H1>

The ncurses (new curses) library is a free software emulation of
curses in System V Release 4.0, and more.  It uses terminfo format,
supports pads and color
and multiple highlights and forms characters and function-key mapping,
and has all the other SYSV-curses enhancements over BSD curses.<P>

In mid-June 1995, the maintainer of 4.4BSD curses declared that he
considered 4.4BSD curses obsolete, and is encouraging the keepers of
Unix releases such as BSD/OS, freeBSD and netBSD to switch over to
ncurses.<P>

The ncurses code was developed under GNU/Linux.
It has been in use for some time with OpenBSD as the system curses library,
and on FreeBSD and NetBSD as an external package.
It should port easily to any ANSI/POSIX-conforming UNIX.
It has even been ported to OS/2 Warp!<P>

The distribution includes the library and support utilities, including a
terminfo compiler tic(1), a decompiler infocmp(1), clear(1), tput(1), tset(1),
and a termcap conversion tool captoinfo(1).  Full manual pages are provided for
the library and tools.<P>

The ncurses distribution is available via anonymous FTP at
the GNU distribution site
<A HREF="ftp://ftp.gnu.org/gnu/ncurses/">ftp://ftp.gnu.org/gnu/ncurses/</A>&nbsp;.
<br>It is also available at
<A HREF="ftp://invisible-island.net/ncurses/">ftp://invisible-island.net/ncurses/</A>&nbsp;.

<H1>Release Notes</H1>

This release is designed to be upward compatible from ncurses 5.0 and 5.3;
very few applications will require recompilation, depending on the platform.
These are the highlights from the change-log since ncurses 5.3 release.
<p>
Interface changes:
<ul>
        <li>add the remaining functions for X/Open curses wide-character
            support.
                <ul>
                <li>pecho_wchar()
                <li>slk_wset()
                </ul>
            These are only available if the library is configured using the
            <kbd>--enable-widec</kbd> option.

        <li>write <code>getyx()</code> and related 2-return macros in terms of
            <code>getcury()</code>,
            <code>getcurx()</code>, etc.

        <li>simplify ifdef for <code>bool</code> declaration in curses.h

        <li>modify ifdef's in curses.h that disabled use of
            <code>__attribute__()</code> for g++, since recent versions
            implement the cases which ncurses uses.

        <li>add <code>key_defined()</code> function, to tell which keycode a
            string is bound to.
</ul>
New features and improvements:
<ul>
        <li>library
          <ul>
            <li>implement logic in lib_mouse.c to handle position reports which
              are generated when XFree86 xterm is initialized with private
              modes 1002 or 1003. These are returned to the application as the
              REPORT_MOUSE_POSITION mask, which was not implemented.
            <li>modify soft-key initialization to use A_REVERSE if A_STANDOUT
              would not be shown when colors are used, i.e., if ncv#1 is set in
              the terminfo as is done in "screen".
            <li>add configure option for FreeBSD sysmouse, --with-sysmouse, and
              implement library support for that.
          </ul>

        <li>programs:

          <ul>
          <li>tack:

            <ul>
            <li>allow it to run from fallback terminfo data.
            <li>reset colors after each color test, correct a place
                where <code>exit_standout_mode</code> was used instead of
                <code>exit_attribute_mode</code>.
            <li>improve <code>bce</code> test by making it set colors other
                than black on white.
            </ul>

          <li>tic:

            <ul>
            <li>handle a case where an entry has no
                description, and capabilities begin on the same line as the entry
                name.
            <li>allow a terminfo entry with a leading 2-character name.
            <li>improved warnings when suppressing items to fit in termcap's
                1023-byte limit.
            <li>add check for multiple "tc=" clauses in a termcap.
            <li>correct logic for resolving "use=" clauses
                allow infocmp and tic to show cancelled capabilities.
            <li>check for incomplete line-drawing character mapping.
            <li>check for missing/empty/illegal terminfo name.
            </ul>

          <li>tput:
            <ul>
            <li>modify tput to use the same parameter analysis as tparm() does,
              to provide for user-defined strings, e.g., for xterm title, a
              corresponding capability might be
                title=\E]2;%p1%s^G,
            </ul>

          <li>tset:

            <ul>
            <li>use the system's default values for CKILL and other default
                control characters.
            <li>correct interchanged defaults for kill and interrupt
                characters, which caused it to report unnecessarily.
            </ul>

          </ul>
</ul>
Major bug fixes:
<ul>
        <li>prevent recursion in wgetch() via wgetnstr() if the connection
          cannot be switched between cooked/raw modes because it is not a TTY.

        <li>correct a case in _nc_remove_string(), used by
          <code>define_key()</code>, to avoid infinite loop if the given string
          happens to be a substring of other strings which are assigned to keys.

        <li>modify logic of acsc to use the original character if no mapping is
          defined, rather than a null.

        <li>several improvements for handling multi-cell display of wide
            characters.
          <ul>
          <li>modify setcchar() to allow converting control characters to complex
            characters.
          <li>correct handling of multibyte characters in waddch_literal() which
            force wrapping because they are started too late on the line.
          <li>modify setcchar() to allow for wchar_t input strings that have
            more than one spacing character.
          </ul>

	<li>other fixes for wide-character support:
	  <ul>
          <li>rewrote lib_acs.c to allow PutAttrChar() to decide how to render
            alternate-characters, i.e., to work with Linux console and UTF-8
            locale.
          <li>implement a workaround so that line-drawing works with screen's
            crippled UTF-8 support (tested with 3.9.13).  This only works with
	    the wide-character support (--enable-widec); the normal library
	    will simply suppress line-drawing when running in a UTF-8 locale in
	    screen.
          <li>corrections to lib_get_wstr.c:
            <ul>
            <li>null-terminate buffer passed to setcchar(), which occasionally
              failed.
            <li>map special characters such as erase- and kill-characters into
              key-codes so those will work as expected even if they are not
              mentioned in the terminfo.
            </ul>
	  </ul>

        <li>modify <code>setupterm()</code> to check if the terminfo and
          terminal-modes have already been read.  This ensures that it does not
          reinvoke <code>def_prog_mode()</code> when an application calls more
          than one function, such as <code>tgetent()</code> and
          <code>initscr()</code>.

        <li>fix form_driver() cases for REQ_CLR_EOF, REQ_CLR_EOL, REQ_DEL_CHAR,
          REQ_DEL_PREV and REQ_NEW_LINE, which did not ensure the cursor was at
          the editing position before making modifications.

        <li>correct <code>keybound()</code>, which reported definitions in the
          wrong table, i.e., the list of definitions which are disabled by
          <code>keyok()</code>.

        <li>fixes related to safe_sprintf.c:
          <ul>
          <li>correct an allocation size in safe_sprintf.c for the "*" format
          code.
          <li>correct safe_sprintf.c to not return a null pointer if the format
            happens to be an empty string.
          <li>make return value from _nc_printf_string() consistent. Before,
            depending on whether --enable-safe-sprintf was used, it might not
            be cached for reallocating.
          </ul>

        <li>other low-level improvements to the optimization code include:
          <ul>
          <li>if the output is a socket or other non-tty device, use 1
            millisecond
            for the cost in mvcur; previously it was 9 milliseconds because the
            baudrate was not known.
          <li>modify lib_getch.c to avoid recursion via wgetnstr() when the
            input
            is not a tty and consequently mode-changes do not work.
          <li>fix several places in tack/pad.c which tested and used the
            parameter- and parameterless strings inconsistently.
          <li>change several tputs() calls in scrolling code to use putp(), to
            enable padding which may be needed for some terminals.
          <li>improve mvcur() by checking if it is safe to move when video
            attributes are set (msgr), and if not, reset/restore attributes
            within that function rather than doing it separately in the GoTo()
            function in tty_update.c.
	  <li>use tputs() rather than putp() in a few cases in tty_update.c
	    since the corresponding delays are proportional to the number of
	    lines affected: repeat_char, clr_eos, change_scroll_region.
          </ul>

        <li>correct line/column reference in adjust_window(), needed to make
          special windows such as curscr track properly when resizing.

        <li>fix a potential recursion between napms() and _nc_timed_wait()

        <li>rewrote lib_insch.c, combining it with lib_insstr.c so both handle
          tab and other control characters consistently.

        <li>do not try to open gpm mouse driver if standard output is not a
          tty; the gpm library does not make this check.
</ul>

Portability:
<ul>
        <li>configure script:
          <ul>
          <li>new options:
            <dl>
            <dt>--with-abi-version option.
	      <dd>addresses platforms where packagers have diverged from
		  ncurses ABI numbering.
            <dt>--with-manpage-format=catonly
              <dd>addresses
                  behavior of BSDI, allow install of man+cat files on NetBSD,
                  whose behavior has diverged by requiring both to be present.
            <dt>--with-manpage-aliases
              <dd>extends
                  "--with-manpage-aliases" to provide the option of generating
                  ".so" files rather than symbolic links for manpage aliases.
            <dt>--with-rel-version
              <dd>workaround to force
		  libtool on Darwin generate the "same" library names as with
		  the "--with-shared" option.  The Darwin ld program does not
		  work well with a zero as the minor-version value.
            <dt>--with-trace
              <dd>simplifies defining TRACE to incorporate trace() in libraries.
            </dl>
  
          <li>fixes/improvements for cross-compiling:
  
            <ul>
            <li>allow BUILD_CC and related configure script variables to be
              overridden from the environment.
            <li>use AC_CHECK_TOOL to get proper values for AR and LD for cross
              compiling.
	    <li>use <code>$cross_compiling</code> variable in configure script
	      rather than comparing <code>$host_alias</code> and
	      <code>$target</code> alias, since "host" is traditionally misused
	      in autoconf to refer to the target platform.
            <li>modify run_tic.in to avoid using wrong shared libraries when
              cross-compiling.
            </ul>
  
          <li>fixes for Mac OS X:
            <ul>
            <li>fix a redefinition of <code>$RANLIB</code> in the configure
              script when libtool is used.
            <li>modify MKlib_gen.sh to avoid passing "#" tokens through the C
              preprocessor.  This works around Mac OS X's preprocessor, which
              insists on adding a blank on each side of the token.
            </ul>
  
          <li>workarounds for broken tools:
            <ul>
            <li>add configure check for wchar_t and wint_t types, rather than
              rely on preprocessor definitions.  Also work around for gcc
	      <code>fixinclude</code> bug which creates a shadow copy of
	      curses.h if it sees these symbols apparently typedef'd.
	    <li>modify configure script to omit -Winline for gcc 3.3, since
	      that feature is broken.
            <li>several script fixes to work around the ironically named
              <em>POSIXLY_CORRECT</em> feature of GNU sed 4.0.
	    <li>modify configure script to avoid using "head -1", which does
	      not work if POSIXLY_CORRECT (sic) is set.
            <li>update configure script to reflect fix for
              AC_PROG_GCC_TRADITIONAL, which is broken in autoconf 2.5x for Mac
              OS X 10.2.3.
            <li>repair check for missing C++ compiler, which is broken in
              autoconf 2.5x by hardcoding it to g++.
            </ul>
  
          <li>corrected ifdef's relating to configure check for wchar_t, etc.
          <li>remove configure script check to allow -Wconversion for older
            versions of gcc
	  <li>modify configure script to accommodate libtool 1.5, as well as
	    add an parameter to the "--with-libtool" option which can specify
	    the pathname of libtool.
          <li>change several sed scripts to avoid using "\+" since it is not a
	    BRE (basic regular expression).  One instance caused terminfo.5 to
	    be misformatted on FreeBSD.
          <li>use '%' as sed substitute delimiter in run_tic script to avoid
            problems with pathname delimiters such as ':' and '@'.
          <li>add -D_XOPEN_SOURCE=500 if needed when configuring with
	    "--enable-widec", to get <code>mbstate_t</code> declaration on HPUX
	    11.11.
          </ul>

        <li>library:
          <ul>
          <li>adjust include-options in CF_ETIP_DEFINES to avoid missing
            ncurses_dll.h, fixing special definitions that may be needed for
            etip.h.
          <li>modify CF_LIB_SUFFIX for Itanium releases of HP-UX, which use a
            ".so" suffix.
          <li>improve ifdef's to guard against redefinition of wchar_t and wint_t
            in curses.h.
          <li>remove an #undef for KEY_EVENT from curses.tail used in the
            experimental NCURSES_WGETCH_EVENTS feature.  The #undef confuses
            Debian <code>dpkg</code>'s build script.
          </ul>
</ul>

<H1>Features of Ncurses</H1>

The ncurses package is fully compatible with SVr4 (System V Release 4) curses:

<UL>
<LI>All 257 of the SVr4 calls have been implemented (and are documented).
<LI>Full support for SVr4 curses features including keyboard mapping, color,
forms-drawing with ACS characters, and automatic recognition of keypad
and function keys.
<LI>An emulation of the SVr4 panels library, supporting
a stack of windows with backing store, is included.
<LI>An emulation of the SVr4 menus library, supporting
a uniform but flexible interface for menu programming, is included.
<LI>An emulation of the SVr4 form library, supporting
data collection through on-screen forms, is included.
<LI>Binary terminfo entries generated by the ncurses tic(1) implementation
are bit-for-bit-compatible with the entry format SVr4 curses uses.
<LI>The utilities have options to allow you to filter terminfo
entries for use with less capable <STRONG>curses</STRONG>/<STRONG>terminfo</STRONG>
versions such as the HP/UX and AIX ports.</UL>

The ncurses package also has many useful extensions over SVr4:

<UL>
<LI>The API is 8-bit clean and base-level conformant with the X/OPEN curses
specification, XSI curses (that is, it implements all BASE level features,
but not all EXTENDED features).  Most EXTENDED-level features not directly
concerned with wide-character support are implemented, including many
function calls not supported under SVr4 curses (but portability of all
calls is documented so you can use the SVr4 subset only).
<LI>Unlike SVr3 curses, ncurses can write to the rightmost-bottommost corner
of the screen if your terminal has an insert-character capability.
<LI>Ada95 and C++ bindings.
<LI>Support for mouse event reporting with X Window xterm and OS/2 console windows.
<LI>Extended mouse support via Alessandro Rubini's gpm package.
<LI>The function <CODE>wresize()</CODE> allows you to resize windows, preserving
their data.
<LI>The function <CODE>use_default_colors()</CODE> allows you to
use the terminal's default colors for the default color pair,
achieving the effect of transparent colors.
<LI>The functions <CODE>keyok()</CODE>
and <CODE>define_key()</CODE> allow
you to better control the use of function keys,
e.g., disabling the ncurses KEY_MOUSE,
or by defining more than one control sequence to map to a given key code.
<LI>Support for 16-color terminals, such as aixterm and XFree86 xterm.
<LI>Better cursor-movement optimization.  The package now features a
cursor-local-movement computation more efficient than either BSD's
or System V's.
<LI>Super hardware scrolling support.  The screen-update code incorporates
a novel, simple, and cheap algorithm that enables it to make optimal
use of hardware scrolling, line-insertion, and line-deletion
for screen-line movements.  This algorithm is more powerful than
the 4.4BSD curses quickch() routine.
<LI>Real support for terminals with the magic-cookie glitch.  The
screen-update code will refrain from drawing a highlight if the magic-
cookie unattributed spaces required just before the beginning and
after the end would step on a non-space character.  It will
automatically shift highlight boundaries when doing so would make it
possible to draw the highlight without changing the visual appearance
of the screen.
<LI>It is possible to generate the library with a list of pre-loaded
fallback entries linked to it so that it can serve those terminal types even
when no terminfo tree or termcap file is accessible (this may be useful
for support of screen-oriented programs that must run in single-user mode).
<LI>The tic(1)/captoinfo utility provided with ncurses has the
ability to translate many termcaps from the XENIX, IBM and
AT&amp;T extension sets.
<LI>A BSD-like tset(1) utility is provided.
<LI>The ncurses library and utilities will automatically read terminfo
entries from $HOME/.terminfo if it exists, and compile to that directory
if it exists and the user has no write access to the system directory.
This feature makes it easier for users to have personal terminfo entries
without giving up access to the system terminfo directory.
<LI>You may specify a path of directories to search for compiled
descriptions with the environment variable TERMINFO_DIRS (this
generalizes the feature provided by TERMINFO under stock System V.)
<LI>In terminfo source files, use capabilities may refer not just to
other entries in the same source file (as in System V) but also to
compiled entries in either the system terminfo directory or the user's
$HOME/.terminfo directory.
<LI>A script (<STRONG>capconvert</STRONG>) is provided to help BSD users
transition from termcap to terminfo.  It gathers the information in a
TERMCAP environment variable and/or a ~/.termcap local entries file
and converts it to an equivalent local terminfo tree under $HOME/.terminfo.
<LI>Automatic fallback to the /etc/termcap file can be compiled in
when it is not possible to build a terminfo tree.  This feature is neither
fast nor cheap, you don't want to use it unless you have to,
but it's there.
<LI>The table-of-entries utility <STRONG>toe</STRONG> makes it easy for users to
see exactly what terminal types are available on the system.
<LI>The library meets the XSI requirement that every macro entry
point have a corresponding function which may be linked (and will be
prototype-checked) if the macro definition is disabled with
<CODE>#undef</CODE>.
<LI>An HTML "Introduction to Programming with NCURSES" document provides
a narrative introduction to the curses programming interface.
</UL>

<H1>State of the Package</H1>

Numerous bugs present in earlier versions have been fixed; the
library is far more reliable than it used to be.  Bounds checking in many
`dangerous' entry points has been improved.  The code is now type-safe
according to gcc -Wall.  The library has been checked for malloc leaks and
arena corruption by the Purify memory-allocation tester.<P>

The ncurses code has been tested with a wide variety of applications
including (versions starting with those noted):
<DL>
<DT> cdk
<DD> Curses Development Kit
<br>
<A HREF="http://invisible-island.net/cdk/">http://invisible-island.net/cdk/</A>
<br>
<A HREF="http://www.vexus.ca/products/CDK/">http://www.vexus.ca/products/CDK/</a>
<DT> ded
<DD> directory-editor
<br>
<A HREF="http://invisible-island.net/ded/">http://invisible-island.net/ded/</A>
<DT> dialog
<DD> the underlying application used in Slackware's setup, and the basis
for similar applications on GNU/Linux.
<br>
<A HREF="http://invisible-island.net/dialog/">http://invisible-island.net/dialog/</A>
<DT> lynx
<DD> the character-screen WWW browser
<br>
<A HREF="http://lynx.isc.org/release/">http://lynx.isc.org/release/</A>
<DT> Midnight Commander
<DD> file manager
<br>
<A HREF="http://www.ibiblio.org/mc/">http://www.ibiblio.org/mc/</A>
<DT> mutt
<DD> mail utility
<br>
<A HREF="http://www.mutt.org/">http://www.mutt.org/</A>
<DT> ncftp
<DD> file-transfer utility
<br>
<A HREF="http://www.ncftp.com/">http://www.ncftp.com/</A>
<DT> nvi
<DD> New vi versions 1.50 are able to use ncurses versions 1.9.7 and later.
<br>
<A HREF="http://www.bostic.com/vi/">http://www.bostic.com/vi/</A>
<br>
<DT> pinfo
<DD> Lynx-like info browser.
<A HREF="http://dione.ids.pl/~pborys/software/pinfo/">http://dione.ids.pl/~pborys/software/pinfo/</A>
<DT> tin
<DD> newsreader, supporting color, MIME
<A HREF="http://www.tin.org/">http://www.tin.org/</A>
<DT> vh-1.6
<DD> Volks-Hypertext browser for the Jargon File
<br>
<A HREF="http://www.debian.org/Packages/unstable/text/vh.html">http://www.debian.org/Packages/unstable/text/vh.html</A>
</DL>
as well as some that use ncurses for the terminfo support alone:
<DL>
<DT> minicom
<DD> terminal emulator
<br>
<A HREF="http://www.netsonic.fi/~walker/minicom.html">http://www.netsonic.fi/~walker/minicom.html</A>
<DT> vile
<DD> vi-like-emacs
<br>
<A HREF="http://invisible-island.net/vile/">http://invisible-island.net/vile/</A>
</DL>
<P>

The ncurses distribution includes a selection of test programs (including
a few games).

<H2>Who's Who and What's What</H2>

Zeyd Ben-Halim
started it from a previous package pcurses, written by Pavel Curtis.
Eric S. Raymond
continued development.
J&uuml;rgen Pfeifer wrote most of the form and menu libraries.
Ongoing work is being done by
<A HREF="mailto:dickey@invisible-island.net">Thomas Dickey</A>.
Thomas Dickey
acts as the maintainer for the Free Software Foundation,
which holds the copyright on ncurses.
Contact the current maintainers at
<A HREF="mailto:bug-ncurses@gnu.org">bug-ncurses@gnu.org</A>.
<P>

To join the ncurses mailing list, please write email to
<CODE>bug-ncurses-request@gnu.org</CODE> containing the line:
<PRE>
             subscribe &lt;name&gt;@&lt;host.domain&gt;
</PRE>

This list is open to anyone interested in helping with the development and
testing of this package.<P>

Beta versions of ncurses and patches to the current release are made available at
<A HREF="ftp://invisible-island.net/ncurses/">ftp://invisible-island.net/ncurses/</A>&nbsp;.

<H2>Future Plans</H2>
<UL>
<LI>Extended-level XPG4 conformance, with internationalization support.
<LI>Ports to more systems, including DOS and Windows.
</UL>
We need people to help with these projects.  If you are interested in working
on them, please join the ncurses list.

<H2>Other Related Resources</H2>

The distribution provides a newer version of the terminfo-format
terminal description file maintained by
<A HREF="http://www.catb.org/~esr/terminfo/">Eric Raymond</A>&nbsp;.
Unlike the older version, the termcap and terminfo data are provided
in the same file.<P>

You can find lots of information on terminal-related topics
not covered in the terminfo file at
<A HREF="http://www.cs.utk.edu/~shuford/terminal_index.html">Richard Shuford's
archive</A>&nbsp;.
</BODY>
</HTML>
<!--
# The following sets edit modes for GNU EMACS
# Local Variables:
# mode:html
# case-fold-search:nil
# fill-column:70
# End:
-->
